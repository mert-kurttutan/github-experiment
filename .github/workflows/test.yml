name: testing
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  configure:
    # configures version and output from version_map.json using scripts/version_outptu_actions.py and otuptus as github_output
    # uses GITHub_outouput ans matrix to run test
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.configure.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e "mk-math[dev]"

      - name: Configure
        id: configure
        run: |
          python scripts/version_output_actions.py


  test:
    # runs test using the version and output from version_map.json
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix:
        id-number: [0, 1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up version variables
        id: set-version
        run: |
          echo "Tested version ${{ matrix.id-number }}"
          NUMPY_VERSION=$(python scripts/get_version.py ${{ matrix.id-number }} --variable-name=numpy)
          echo "NUMPY_VERSION=$NUMPY_VERSION" >> $GITHUB_OUTPUT
          PYTHON_VERSION=$(python scripts/get_version.py ${{ matrix.id-number }} --variable-name=python)
          echo "PYTHON_VERSION=$PYTHON_VERSION" >> $GITHUB_OUTPUT


      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: steps.set-version.outputs.PYTHON_VERSION

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e "mk-math[dev]"

      - name: Test with ${{ matrix.id-number }}
        run: |
          pytest tests

